import unittest
import pygame
import game_controller

class test_next_player(unittest.TestCase):
    def setUp(self):
        pygame.init()
        screen = pygame.display.set_mode((1400, 900))
        screen.fill((0, 0, 0))

        self.game_controller = game_controller.GameController(screen)

    def test_player_0_starts(self):
        self.game_controller.game_phase = (0, 0)
        self.game_controller.initial_phase_decrease = 0
        self.game_controller.player_turn = self.game_controller.initial_phase_start_player = 0
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 1)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 2)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 3)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 3)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 2)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 1)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 0)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.game_phase, (1, 0))
        self.assertEqual(self.game_controller.player_turn, 0)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 1)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 2)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 3)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 0)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 1)

    def test_player_1_starts(self):
        self.game_controller.game_phase = (0, 0)
        self.game_controller.initial_phase_decrease = 0
        self.game_controller.player_turn = self.game_controller.initial_phase_start_player = 1
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 2)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 3)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 0)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 0)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 3)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 2)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 1)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.game_phase, (1, 0))
        self.assertEqual(self.game_controller.player_turn, 1)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 2)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 3)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 0)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 1)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 2)

    def test_player_2_starts(self):
        self.game_controller.game_phase = (0, 0)
        self.game_controller.initial_phase_decrease = 0
        self.game_controller.player_turn = self.game_controller.initial_phase_start_player = 2
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 3)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 0)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 1)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 1)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 0)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 3)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 2)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.game_phase, (1, 0))
        self.assertEqual(self.game_controller.player_turn, 2)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 3)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 0)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 1)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 2)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 3)

    def test_player_3_starts(self):
        self.game_controller.game_phase = (0, 0)
        self.game_controller.initial_phase_decrease = 0
        self.game_controller.player_turn = self.game_controller.initial_phase_start_player = 3
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 0)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 1)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 2)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 2)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 1)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 0)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 3)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.game_phase, (1, 0))
        self.assertEqual(self.game_controller.player_turn, 3)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 0)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 1)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 2)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 3)
        self.game_controller.next_player()
        self.assertEqual(self.game_controller.player_turn, 0)

suite = unittest.TestLoader().loadTestsFromTestCase(test_next_player)
unittest.TextTestRunner(verbosity=2).run(suite)
    